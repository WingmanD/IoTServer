<!DOCTYPE html>
<html lang="en">
<%inc
     #include <drogon/drogon.h>
%>
<%c++ 
    auto params = @@.get<std::unordered_map<std::string,std::string>>("params");
    auto username = @@.get<std::string>("username");
%>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.3.0/dist/chart.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.4/moment.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-moment@1.0.1/dist/chartjs-adapter-moment.min.js"></script>
    <title>Water Leak Dashboard</title>
    <style>
        .container {
            display: flex;
            flex-wrap: wrap;
        }

        .chart {
            flex: 0 0 auto;
            width: 50%;
            height: 400px;
        }

        @media (max-width: 992px) {
            .container {
                flex-direction: column;
            }

            .chart {
                width: 100%;
            }
        }
    </style>    
</head>

<body>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" href="/">Water Leak Dashboard</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" href="/">Home <span class="sr-only">(current)</span></a>
                </li>
            </ul>
            <%c++ if (username.empty()) {%>
            <span class="navbar-text">
                <a class="nav-link" href="/auth/login">Login</a>
            </span>
            <%c++ } else {%>
            <span class="navbar-text">
                <a class="nav-link" href="" onclick="logout();return false;">{% username %} Logout</a>
            </span>
            <%c++ } %>
        </div>
    </div>
</nav>
<div class="container align-content-center blur">
    <br>
    <h1>Dashboard</h1>
    <br>
    <div class="container">
        <span id="chError"></span>

        <div class="chart">
            <canvas id="chHumidity"></canvas>
        </div>
        <div class="chart">
            <canvas id="chTemperature"></canvas>
        </div>
    </div>
</div>
</body>
</html>

<script>
function RenderChart(ch, data, title, unit, min = undefined, max = undefined) {
    return new Chart(ch, {
        type: "line",
        maintainAspectRatio: false,
        responsive: true,
        data: {
            labels: data.map(i => i.ts),
            datasets: [{
                data: data.map(i => i.value),
                fill: false,
                borderColor: 'rgb(75, 192, 192)',
                tension: 0.125
            }]
        },
        options: {
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'hour'
                    },
                    title: {
                        display: true,
                        text: 'Time'
                    }
                },
                y: {
                    display: true,
                    title: {
                        display: true,
                        text: title
                    },
                    min: min,
                    max: max,
                    ticks: {
                        callback: (value, index, values) => value + unit
                    }
                }
            },
            tooltips: {
                callbacks: {
                    label: value => value + unit
                }
            },
            plugins: {
                legend: {
                    display: false
                }
            }
        }
    });
}

async function LoadTelemetry() {
    var telemetry = await (await fetch("/measurements/")).json();
    var err = document.getElementById("chError");

    if (telemetry.errorCode) {
        err.textContent = `${telemetry.status}[${telemetry.errorCode}]: ${telemetry.message}`;
        return;
    }

    err.remove();

    RenderChart(
        document.getElementById("chHumidity"),
        telemetry.humidity,
        "Humidity", "%", 0, 100
    );

    RenderChart(
        document.getElementById("chTemperature"),
        telemetry.temperature,
        "Temperature", "°C"
    );
}

function DeleteCookie(name) {
    document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:01 GMT;path=/;';
}

function logout() {
    DeleteCookie("username");
    DeleteCookie("jwt");
    location.reload();
}

document.addEventListener("DOMContentLoaded", LoadTelemetry);
</script>