//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "login.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string login::genText(const DrTemplateData& login_view_data)
{
	drogon::OStringStream login_tmp_stream;
	std::string layoutName{""};
	login_tmp_stream << "ï»¿<!DOCTYPE html>\n";
	login_tmp_stream << "<html lang=\"en\">\n";
	login_tmp_stream << "<head>\n";
	login_tmp_stream << "    <meta charset=\"UTF-8\">\n";
	login_tmp_stream << "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
	login_tmp_stream << "    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n";
	login_tmp_stream << "          integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\" crossorigin=\"anonymous\">\n";
	login_tmp_stream << "    <title>Water Leak Dashboard</title>\n";
	login_tmp_stream << "</head>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "<body>\n";
	login_tmp_stream << "<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n";
	login_tmp_stream << "    <div class=\"container\">\n";
	login_tmp_stream << "        <a class=\"navbar-brand\" href=\"/\">Water Leak Dashboard</a>\n";
	login_tmp_stream << "        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n";
	login_tmp_stream << "                aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n";
	login_tmp_stream << "            <span class=\"navbar-toggler-icon\"></span>\n";
	login_tmp_stream << "        </button>\n";
	login_tmp_stream << "    </div>\n";
	login_tmp_stream << "</nav>\n";
	login_tmp_stream << "<div class=\"container align-content-center blur\">\n";
	login_tmp_stream << "    <br>\n";
	login_tmp_stream << "    <h1>Login</h1>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "    <form action=\"/auth/login\" method=\"post\">\n";
	login_tmp_stream << "        <div class=\"form-group\">\n";
	login_tmp_stream << "            <label for=\"username\">Username:</label>\n";
	login_tmp_stream << "            <input class=\"form-control\" type=\"text\" name=\"username\" id=\"username\" required>\n";
	login_tmp_stream << "        </div>\n";
	login_tmp_stream << "        <div class=\"form-group\">\n";
	login_tmp_stream << "            <label for=\"password\">Password:</label>\n";
	login_tmp_stream << "            <input class=\"form-control\" type=\"password\" name=\"password\" id=\"password\" required>\n";
	login_tmp_stream << "        </div>\n";
	login_tmp_stream << "        <br>\n";
	login_tmp_stream << "        <button class=\"btn btn-primary\" type=\"submit\">Login</button>\n";
	login_tmp_stream << "    </form>\n";
	login_tmp_stream << "</div>\n";
	login_tmp_stream << "</body>\n";
	login_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(login_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = login_view_data;
auto str = std::move(login_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
